<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
     	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
     	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"


	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 这里去除了对controller 
		的 扫描，主要是应为当用到 Transaction in view 的时候会有问题 -->
		<import resource="memcached.xml" /><!--memcached 缓存配置 -->
		<import resource="spring-redis.xml"/>
 	<import resource="quartz-interPort.xml" />
	<context:component-scan base-package="net.sinodata.**">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>



	<!-- mybatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:myBatisConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:net/sinodata/business/mybatis/mapper/*Mapper.xml
				</value>
				
			</list>
		</property>
	</bean>
	
	<bean id="esbSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="esbDataSource" />
		<property name="configLocation" value="classpath:myBatisConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:net/sinodata/esb/mybatis/mapper/*Mapper.xml
				</value>
				
			</list>
		</property>
	</bean>

	<!-- class : 指定自动扫描 xxxMapper.xml basePackage: 自动扫描的配置包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.sinodata.business.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.sinodata.esb.dao" />
		<property name="sqlSessionFactoryBeanName" value="esbSqlSessionFactory" />
	</bean>


	<!--elasticsearch jdbc连接-->
	<!-- <bean id="esJdbc" class="net.sinodata.business.util.elasticsearch.EsJdbc" init-method="init">
		<constructor-arg value="${elasticsearch.url}"/>
	</bean> -->

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- production环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
			destroy-method="close">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分 -->
			<property name="idleConnectionTestPeriod" value="60" />
			<!-- 连接池中未使用的链接最大存活时间，单位是分 -->
			<property name="idleMaxAge" value="240" />
			<!-- 设置每个分区含有connection最大个数 -->
			<property name="maxConnectionsPerPartition" value="30" />
			<!-- 设置每个分区含有connection最小个数 -->
			<property name="minConnectionsPerPartition" value="10" />
			<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
			<property name="partitionCount" value="3" />
			<!-- 设置分区中的connection增长数量 -->
			<property name="acquireIncrement" value="5" />
			<!-- 缓存prepared statements的大小，默认值：0 -->
			<property name="statementsCacheSize" value="100" />
			<!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
			<property name="releaseHelperThreads" value="3" />
		</bean>
		
		<bean id="esbDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
			destroy-method="close">
			<property name="driverClass" value="${esb.jdbc.driver}" />
			<property name="jdbcUrl" value="${esb.jdbc.url}" />
			<property name="username" value="${esb.jdbc.username}" />
			<property name="password" value="${esb.jdbc.password}" />
			<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分 -->
			<property name="idleConnectionTestPeriod" value="60" />
			<!-- 连接池中未使用的链接最大存活时间，单位是分 -->
			<property name="idleMaxAge" value="240" />
			<!-- 设置每个分区含有connection最大个数 -->
			<property name="maxConnectionsPerPartition" value="30" />
			<!-- 设置每个分区含有connection最小个数 -->
			<property name="minConnectionsPerPartition" value="10" />
			<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
			<property name="partitionCount" value="3" />
			<!-- 设置分区中的connection增长数量 -->
			<property name="acquireIncrement" value="5" />
			<!-- 缓存prepared statements的大小，默认值：0 -->
			<property name="statementsCacheSize" value="100" />
			<!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
			<property name="releaseHelperThreads" value="3" />
		</bean>

	</beans>
		
</beans>