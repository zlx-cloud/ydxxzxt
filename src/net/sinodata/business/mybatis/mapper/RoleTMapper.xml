<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.sinodata.business.dao.RoleTDao" >
  <resultMap id="BaseResultMap" type="net.sinodata.business.entity.RoleT" >
    <id column="ROLEID" property="roleid" jdbcType="VARCHAR" />
    <result column="ROLENAME" property="rolename" jdbcType="VARCHAR" />
    <result column="MENUIDS" property="menuids" jdbcType="VARCHAR" />
    <result column="ROLEDESCRIPTION" property="roledescription" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ROLEID, ROLENAME, MENUIDS, ROLEDESCRIPTION
  </sql>
  
  
  <select id="getRoleListByPage" resultMap="BaseResultMap"
		parameterType="map">
select <include refid="Base_Column_List" /> from (
		select k.*, rownum rnum from
		(select *　 from t_role   where 1=1
  		<if test="rolename!=null"> and ROLENAME = #{rolename,jdbcType=VARCHAR}</if>
		<if test="roleid!=null"> and ROLEID = #{roleid,jdbcType=VARCHAR}</if>
		order by roleid
  		) k
		where rownum &lt;= #{end}
		)
		where rnum &gt; #{start}

	</select>
	<select id="getRoleCountByPage" resultType="int" parameterType="map">
select count(1) 　 from t_role  where 1=1
	
		<if test="rolename!=null"> and ROLENAME = #{rolename,jdbcType=VARCHAR}</if>
		<if test="roleid!=null"> and ROLEID = #{roleid,jdbcType=VARCHAR}</if>
	</select>
  
  
  <select id="existUserWithRoleId" resultType="int" parameterType="java.lang.String">
select count(1) 　 from FWCYFZCB  where ROLEID= #{roleid,jdbcType=VARCHAR}
	
		
	</select>
  
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_ROLE
    where 1=1
     <if test="roleid != null" >
    and  ROLEID = #{roleid,jdbcType=VARCHAR}
      </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_ROLE
    where <!-- ROLEID = #{roleid,jdbcType=VARCHAR} -->ROLEID in (${roleid}) 
  </delete>
  <insert id="insert" parameterType="net.sinodata.business.entity.RoleT" >
    insert into T_ROLE (ROLEID, ROLENAME, MENUIDS, 
      ROLEDESCRIPTION)
    values (#{roleid,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, #{menuids,jdbcType=VARCHAR}, 
      #{roledescription,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.sinodata.business.entity.RoleT" >
    insert into T_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
     <!--  <if test="roleid != null" > -->
        ROLEID,
      <!-- </if> -->
      <if test="rolename != null" >
        ROLENAME,
      </if>
      <if test="menuids != null" >
        MENUIDS,
      </if>
      <if test="roledescription != null" >
        ROLEDESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
    <include refid="batch_seq" />,
      <!-- <if test="roleid != null" >
        #{roleid,jdbcType=VARCHAR},
      </if> -->
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="menuids != null" >
        #{menuids,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null" >
        #{roledescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.sinodata.business.entity.RoleT" >
    update T_ROLE
    <set >
      <if test="rolename != null" >
        ROLENAME = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="menuids != null" >
        MENUIDS = #{menuids,jdbcType=VARCHAR},
      </if>
      <if test="roledescription != null" >
        ROLEDESCRIPTION = #{roledescription,jdbcType=VARCHAR},
      </if>
    </set>
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.sinodata.business.entity.RoleT" >
    update T_ROLE
    set ROLENAME = #{rolename,jdbcType=VARCHAR},
      MENUIDS = #{menuids,jdbcType=VARCHAR},
      ROLEDESCRIPTION = #{roledescription,jdbcType=VARCHAR}
    where ROLEID = #{roleid,jdbcType=VARCHAR}
  </update>
  <sql id="batch_seq">BATCH_SEQ.NEXTVAL</sql>
</mapper>